version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: kratom-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kratom
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d kratom"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - kratom-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kratom-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/kratom
    ports:
      - "5000:5000"
    volumes:
      - migrations-data:/app/migrations
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    networks:
      - kratom-network

volumes:
  postgres-data:
    driver: local
  migrations-data:
    driver: local

networks:
  kratom-network:
    driver: bridge
